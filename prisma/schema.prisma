// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  userName           String    @unique
  email              String    @unique
  password           String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  lastSession        DateTime?
  role               Role      @default(USER)
  cart               Cart?
  profile            Profile?
  termsAndConditions Boolean   @default(false)
  privacyPolicy      Boolean   @default(false)
  // posts       Post[]
  //comments       Comment[]
}

model Profile {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  name        String   @db.VarChar(50)
  lastName    String   @db.VarChar(50)
  phoneNumber String?  @db.VarChar(15)
  idNumber    String   @unique
  age         Int?
  gender      Gender?
  address     String?
  coordinates String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  quantity    Int
  inExistence Boolean
  category    String
  photoUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartProducts CartProduct[]
}

model Cart {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cartProducts CartProduct[]
}

model CartProduct{
  id Int @id @default(autoincrement())
  cart Cart @relation(fields:[cartId],references:[id])
  cartId Int 
  product Product @relation(fields:[productId],references: [id])
  productId Int
  quantity Int
  payed Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bill {
  id            Int           @id @default(autoincrement())
  userEmail     String
  amount        Int
  clientAddress String?
  coordinates   String?
  paymentMethod PaymentMethod @default(cashUSD)
  paymentData   Json
  confirmed     Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

//model Post{
//id Int @id @default(autoincrement())
//title String
//body String
//author User @relation(fields:[authorId],references:[id])
//authorId String
//}

//model Comment{
//id Int @id @default(autoincrement())
//title String
//body String
//author User @relation(fields:[authorId],references:[id])
//authorId String
//post Post  @relation(fields:[postId],references:[id])
//postId Int
//}

enum PaymentMethod {
  PAYPAL
  PAGOMOVIL
  cashUSD
}

enum Role {
  ROOT
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
