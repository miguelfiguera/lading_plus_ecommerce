// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  userName    String    @unique
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastSession DateTime?
  role Role @default(User)
  Cart        Cart[]
  profile     Profile?
 // posts       Post[]
}
 
model Profile{
  id Int @id @default(autoincrement())
  user User @relation(fields:[userId],references:[id])
  userId String @unique
  name String @db.VarChar(50)
  lastName String @db.VarChar(50)
  address String
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Int
  quantity    Int
  inExistence Boolean
  photoUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  carts        Cart[]
  bills Bill[]
}

model Cart {
  id       Int       @id @default(autoincrement())
  products Product[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String
}

model Bill{
  id Int @id @default(autoincrement())
  userEmail String
  products Product[]
  amount Int
  clientAddress String?
  coordinates String?
  paymentMethod PaymentMethod @default(cashUSD)
  paymentData Json
  confirmed Boolean @default(false)
}


//model Post{
//id Int @id @default(autoincrement())
//title String
//body String
//author User @relation(fields:[authorId],references:[id])
//authorId String
//}




enum PaymentMethod{
  PAYPAL
  PAGOMOVIL
  cashUSD
}

enum Role{
  Root
  Admin
  User
}